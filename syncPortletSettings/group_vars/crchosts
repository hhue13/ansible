---
sendSlackNotifications: false
## Slack authentication token
## ansible-vault encrypt_string --vault-id dev@~ansible_password '<plain-text-password>' --name 'slackAuthenticationToken'
slackAuthenticationToken: !vault |
  $ANSIBLE_VAULT;1.2;AES256;ks8
  35343964373661346235363936613731636365353365646638363033366538376130323561383739
  3632306563303435646530666235356231323639613166620a636130353264356530623331303333
  36396566363062396162343030346666616432656264393631653239373932323834323334313732
  3762616536356435350a343064363765656238376564356532626238336265393666393739366335
  63633262363839646237366638383838303861383864323337376233346132396335343964663130
  39633136353530346263616666613662663732663434303066356265333162366637326564663166
  343566613435326562663634373831393433
##
## OSCP Authenticaton data used to login to K8S
## ansible-vault encrypt_string --vault-id ks8@~/ansible_password '<plain-text-password>' --name 'oscpKubeAdminPassword'
oscpKubeAdminUserName: ocpadmin
oscpKubeAdminPassword: !vault |
  $ANSIBLE_VAULT;1.2;AES256;ks8
  38313431303931646662363838623732633661326363346432383964336533333264653834386533
  6335336136616463623238333532633136336131303930620a356436633237643633623736616434
  35656135383461633366323963663462653539326133306635663566633133653938336664366336
  3737326661646565630a626137363164346361653664343265303334323830346337343161626264
  6465
##
## OSCP installation details
oscpDomain: cloud.a-it.dev
oscpClusterName: epyc
##
## Namespace
oscpDeployments:
  - namespace: dxb
    deployment: dx-blue
  - namespace: dxg
    deployment: dx-green
##
## Route indicating the active namespace (if the NS has this route it's considered to be the active one)
oscpDxActiveRoute: dxp-route
##
## OpenShift client to be used
oscpClientBin: "/usr/local/bin/oc"
##
## Logout of the OC command shell at the end?
oscpLogoutOfOc: true
##
## Required rpms
requiredRpms:
  - python3-requests-oauthlib
  - net-tools
##
## Required pip modules
requiredPipModules:
  - openshift
  - pyyaml
  - kubernetes
##
## umask for checked out git repos
gitCheckoutUmask: "022"
##
## Configure XML Access files to be imported from a Git Repo
scriptsGitSource:
  gitPrivateKey: "/home/hhuebler/.ssh/github_deploy_key"
  gitRepositoryUrl: "git@github.com:hhue13/build-gbgscripts.git"
  gitBranchOrVersion: "feature/syncPortletSettings"
  gitRemote: "origin"

scriptLogLevel: INFO

exportWaitBetweenChecks: "10"
exportWaitNumberChecks: "90"
xmlAccessExportsDir: "/tmp"
#### webmodsXmlBackupDirOnPod: "/opt/gbg/xmlexports"
webmodsXmlBackupDirOnPod: "/opt/HCL/shared/xmlexports"
webmodsXMLActiveLine: "{{ xmlAccessExportsDir}}/webmodsXMLActiveLine.xml"
webmodsXMLInActiveLine: "{{ xmlAccessExportsDir}}/webmodsXMLInActiveLine.xml"
webmodsXMLSycFile: "{{ xmlAccessExportsDir}}/webmodsXMLSyncFile.xml"


##################
## DX stuff
##################
##
## WAS Admin user to run xmlaccess
wasUser: "wpadmin"
##
## WAS Admin user's password to run xmlaccess
wasPassword: !vault |
  $ANSIBLE_VAULT;1.2;AES256;dev
  64346461306632646633363037396637303934666663343363393064336433646265663736613966
  3563353433386133356564333632656465326564373838630a373132316266393636333135633663
  61303938626236356639616261393737623764393061656335616363303839343934633330303130
  3233623765623433370a323334333534373463353762353339356533396539636136323463653633
  3534
##
## WPS Admin user to run xmlaccess
wpsUser: "{{ wasUser }}"
##
## WPS Admin user's password to run xmlaccess
wpsPassword: "{{ wasPassword }}"
##
## UIDs of the webmods to be sync'ed. Must be RexEx compliants
webmodsToBeExported:
  - "wp.ap.impersonation.webmod"
  - "wp.scriptportlet.editor.portlets.webmod"
  - "wps.dynamicui.transformationapp.webmod"
  - "wps.pzn.transformationapp.webmod"
  - "com..*"

dryRun: false