---
#######################################################################################################
## Requires the following collections and python modules:
##
## See README.md for required software dependencies
##
## ansible-playbook -e @globalVars exportSite.yaml
## ansible-playbook --vault-id k8s@~/ansible_password -e @globalVars exportSite.yaml
##
## Note: Make sure you setup visudo correctly so that "sudo -i -u <become_user>" works
#######################################################################################################
- name: Perform a full xmlaccess export of a site
  hosts: crchosts
  become: yes
  become_user: "{{ oscpOsUser }}"
  gather_facts: true
  force_handlers: true
  vars_files:
    - "{{ includedVars | default('group_vars/crchosts') }}"
  module_defaults:
    kubernetes.core.k8s:
      validate_certs: "no"
    kubernetes.core.k8s_info:
      validate_certs: "no"
    kubernetes.core.k8s_exec:
      validate_certs: "no"
    kubernetes.core.k8s_cp:
      validate_certs: "no"
    community.okd.openshift_auth:
      validate_certs: "no"
    community.okd.openshift_process:
      validate_certs: "no"
    community.okd.openshift_route:
      validate_certs: "no"
  #########################
  ## Tasks of the play-book
  #########################
  tasks:
    - name: Send notification message via Slack
      community.general.slack:
        token: "{{ slackAuthenticationToken }}"
        msg: "Started exportSite processing for deployment {{ oscpDxDeploymentName }} in namespace {{ oscpNameSpace }}"
      when: ((sendSlackNotifications is defined) and (sendSlackNotifications == true))
    ##
    ## Set login facts
    - name: Set K8S login facts
      include_tasks: k8slogin.yaml
      tags:
        - always
    ##
    ## Dump API Key
    - name: Dump API Key in MAIN
      ansible.builtin.debug:
        msg:
          - "API Key is {{ kube_api_key  }}"
      no_log: true
      tags:
        - never
    ##############
    ## Debug Vars
    ##############
    - name: Print some debug information
      vars:
        msg: |
          Module Variables ("vars"):
          --------------------------------
          {{ vars | to_nice_json }}

          Environment Variables ("environment"):
          --------------------------------
          {{ environment | to_nice_json }}

          GROUP NAMES Variables ("group_names"):
          --------------------------------
          {{ group_names | to_nice_json }}

          GROUPS Variables ("groups"):
          --------------------------------
          {{ groups | to_nice_json }}

          HOST Variables ("hostvars"):
          --------------------------------
          {{ hostvars | to_nice_json }}
      debug:
        msg: "{{ msg.split('\n') }}"
      tags:
        - never

    - name: Display hostvars
      ansible.builtin.debug:
        msg: "hostvars:\n\n{{ hostvars | to_yaml}}\n\n"
      tags:
        - never

    - name: Create a timestamp for the XMLACCESS runs
      ansible.builtin.set_fact:
        backupTimeStamp: "{{ ansible_date_time.iso8601_basic_short }}"
      tags:
        - always

    - name: Run the xmlaccess imports to adjust page settings
      ansible.builtin.include_role:
        name: runXmlAccess
      vars:
        roleDeployment: "{{ oscpDxDeploymentName }}"
        roleHost: "{{ k8s_host }}"
        roleKey: "{{ kube_api_key }}"
        roleNs: "{{ oscpNameSpace }}"
        roleCorePodName: "{{ exportCorePodName }}"
        roleCorePodContainerName: "{{ exportCorePodContainerName }}"
        roleWpsAdminUser: "{{ wpsUser }}"
        roleWpsAdminPassword: "{{ wpsPassword }}"
        roleBackupTimeStamp: "{{ backupTimeStamp }}"
        roleExportXmlFile: "{{ exportXmlFile }}"
        roleExportDir: "{{ exportDir }}"
        roleExportWaitBetweenChecks: "{{ exportWaitBetweenChecks }}"
        roleExportWaitNumberChecks: "{{ exportWaitNumberChecks }}"
        roleExportRetainCopies: "{{ exportRetainCopies }}"
        roleXmlaccessHeapSettings: "{{ xmlaccessHeapSettings | default('') }}"
      tags:
        - always
    ##
    ## Logout
    - name: If login succeeded, try to log out (revoke access token)
      community.okd.openshift_auth:
        host: "{{ k8s_host }}"
        state: absent
        api_key: "{{ kube_api_key }}"
        validate_certs: "no"
      when: kube_api_key is defined
      tags:
        - always
